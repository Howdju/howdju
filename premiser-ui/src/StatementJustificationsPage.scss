@import '~react-md/src/scss/react-md';
@import './flatui-colors';
@import './colors';

$agreement: $emerald;
$disagreement: $pomegranate;
$gradient-start-opacity: .6;
$gradient-point: 25%;
$slide-size: $md-btn-icon-size;

// All must be less than $md-toolbar-z-index (default 15) or else they will float above the toolbar upon scrolling
// ($md-menu-z-index is 10)
$gradient-z-index: 5;
$over-gradient-z-index: 10;

.statementContextMenu {
  z-index: $over-gradient-z-index;
  float: right;
  .md-list--menu {
    z-index: $over-gradient-z-index + 1;
  }
}

.justificationContextMenu {
  float: right;
}

.statement {
  // Animate gradients with this trick:
  // https://medium.com/@dave_lunny/animating-css-gradients-using-only-css-d2fd7671e759

  // Provide a background color for the card, which we make transparent
  background: get-color('card', $md-light-theme);

  .statementCard {

     .statementText {
       z-index: $over-gradient-z-index;
     }

    background: inherit;
    background-size: 100%;
    position: relative;
    // Don't use this part of the trick; messing with z-index can break material design
    //z-index: 100;

    &:before {
      background: linear-gradient(to right,
              rgba($agreement, $gradient-start-opacity) 0%,
              rgba($agreement, 0) $gradient-point,
              rgba($agreement,0) 100%
      );

      content: '';
      display: block;
      height: 100%;
      position: absolute;
      top: 0; left: 0;
      opacity: 0;
      width: 100%;
      // Place this above the .statement in the local stacking context
      z-index: $gradient-z-index;
      transition: opacity 0.4s;
    }
    // Extend the trick to have both a before and after
    &:after {
      background: linear-gradient(to left,
              rgba($disagreement, $gradient-start-opacity) 0%,
              rgba($disagreement,0) $gradient-point,
              rgba($disagreement, 0) 100%
      );

      content: '';
      display: block;
      height: 100%;
      position: absolute;
      top: 0; left: 0;
      opacity: 0;
      width: 100%;
      // Place this above the .statement in the local stacking context
      z-index: $gradient-z-index;
      transition: opacity 0.4s;
    }
    &.agreement:before {
      opacity: 1;
    }
    &.disagreement:after {
      opacity: 1;
    }
  }
}

@mixin quote {
  color: $asbestos;
  font-size: 200%;
  position: absolute;
}

.justification {

  .actions {
    // Create a local stacking context
    z-index: 0;

    & > * {
      transition: opacity 0.2s, right 0.4s, left 0.4s;
      position: relative;
      right: 0;

      &.verified, &.disverified {
        color: $midnight-blue;
        // Put the selected buttons (which will remain visible while others fade) above them
        z-index: 1;
      }
      &.disverified.inactive {
        right: $slide-size;
      }

      &.hiding {
        right: $slide-size;
        opacity: 0;
      }
    }
  }


  .justificationText.quote {
    border-left: 2px solid $primary-color;
    margin: 1.5em 10px;
    padding: 0.5em 10px;
    quotes: "\201C" "\201D" "\2018" "\2019";

    span {
      // Push it out past the position:absolute quote
      margin-left: 20px;
    }

    &:before {
      @include quote;
      content: open-quote;
    }
    &:after {
      @include quote;
      margin-left: 10px;
      content: close-quote;
    }
  }

  .otherSelected .md-icon {
    color: $concrete;
  }

  .md-list--menu {
    // Menus will always be ltr
    direction: ltr;
  }

  &.positivey {

    /*background-color: #AFA;*/
    .actions {
      .md-icon {
        // When positivey, the icons look better flipped
        transform: scaleX(-1);
      }
    }

    & > .counterJustifications {
      margin-left: 20px;
      .actions {
        direction: rtl;
        .md-icon {
          transform: none;
        }
      }
    }
  }

  &.negativey {

    .card {
      .actions {
        direction: rtl;

        & > * {
          left: 0;
          right: auto;

          &.disverified.inactive {
            left: $slide-size;
            right: auto;
          }

          &.hiding {
            left: $slide-size;
            right: auto;
            opacity: 0;
          }
        }
      }
    }

    & > .counterJustifications {
      margin-right: 20px;
      .actions {
        direction: ltr;
        .md-icon {
          transform: scaleX(-1);
        }
      }
    }
  }

  .card {
    margin-bottom: 10px;
  }
}

@media only screen and (max-width: 640px) {
  /*.justification.positive, .justification.negative {*/
    /*float: none;*/
    /*width: 100%;*/
  /*}*/
}